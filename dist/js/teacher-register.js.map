{"version":3,"sources":["teacher-register.js","assets/js/plugin/intlTelInput.js","assets/js/component/jquery-steps.js","assets/js/component/view-password.js","assets/js/component/custom-input.js","assets/js/component/visitor-form-validation.js","assets/js/component/dropify.js","assets/js/component/select2.js"],"names":["global","factory","exports","module","define","amd","self","intlTelInput","this","fn","createCommonjsModule","window","document","undefined","allCountries","i","length","c","name","iso2","dialCode","priority","areaCodes","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","intlTelInputGlobals","getInstance","input","id","getAttribute","instances","defaults","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","initialCountry","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","separateDialCode","utilsScript","regionlessNanpNumbers","addEventListener","windowLoaded","forEachProp","obj","callback","keys","forEachInstance","method","Iti","options","_this","instance","Constructor","TypeError","_classCallCheck","telInput","activeItem","highlightedItem","customOptions","value","hasOwnProperty","hadInitialPlaceholder","Boolean","protoProps","staticProps","_this2","isMobile","test","navigator","userAgent","body","classList","add","Promise","autoCountryPromise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processCountryCodes","_processPreferredCountries","_translateCountriesByLocale","countries","sort","_countryNameSort","dialCodeMaxLen","countryCodes","index","lowerCaseOnlyCountries","map","country","toLowerCase","filter","indexOf","lowerCaseExcludeCountries","iso","a","b","localeCompare","_addCountryCode","_i","_c","rootCountryCode","j","areaCode","k","partialDialCode","substr","countryCode","countryData","_getCountryData","push","attrs","container","el","createElement","setAttribute","appendChild","parentClass","wrapper","_createEl","class","parentNode","insertBefore","flagsContainer","selectedFlag","role","aria-owns","selectedFlagInner","selectedDialCode","dropdownArrow","countryList","aria-expanded","_appendListItems","aria-disabled","dropdown","hiddenInputName","lastIndexOf","concat","type","className","tmp","insertAdjacentHTML","val","_getDialCode","isRegionlessNanp","_isRegionlessNanp","_this$options","_updateFlagFromNumber","_setFlag","defaultCountry","_updateValFromNumber","_initKeyListeners","_initBlurListeners","_initDropdownListeners","_initHiddenInputListener","_this3","_handleHiddenInputSubmit","getNumber","form","tagName","_this4","_handleLabelClick","e","contains","focus","preventDefault","label","_getClosestLabel","_handleClickSelectedFlag","disabled","readOnly","_showDropdown","_handleFlagsContainerKeydown","stopPropagation","_closeDropdown","_this5","intlTelInputUtils","loadUtils","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","setTimeout","_this6","_handleKeyupEvent","_triggerCountryChange","_handleClipboardEvent","number","max","_this7","_handleSubmitOrBlurEvent","_removeEmptyDialCode","charAt","numeric","_getNumeric","s","replace","createEvent","initEvent","dispatchEvent","remove","_setDropdownPosition","_highlightListItem","_scrollTo","_bindDropdownListeners","_trigger","shouldHaveClass","_this8","pos","getBoundingClientRect","windowTop","pageYOffset","documentElement","scrollTop","inputTop","top","dropdownHeight","offsetHeight","dropdownFitsBelow","innerHeight","dropdownFitsAbove","_toggleClass","extraTop","style","left","scrollLeft","_handleWindowScroll","_this9","_handleMouseoverCountryList","listItem","_getClosestListItem","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","clearTimeout","_searchForCountry","next","previousElementSibling","nextElementSibling","_startsWith","querySelector","originalNumber","useNational","_intlTelInputUtils$nu","numberFormat","NATIONAL","INTERNATIONAL","format","formatNumber","_beforeSetNumber","isNanp","alreadySelected","shouldFocus","prevItem","ignoreOnlyCountriesOption","allowFail","Error","prevCountry","title","innerHTML","selectedFlagWidth","offsetWidth","_getHiddenSelectedFlagWidth","paddingLeft","_updatePlaceholder","nextItem","containerClone","cloneNode","visibility","selectedFlagClone","width","removeChild","shouldSetPlaceholder","numberType","placeholder","getExampleNumber","flagChanged","_updateDialCode","len","setSelectionRange","removeEventListener","element","middle","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","middleOffset","heightDifference","newDialCodeBare","hasSelectedListItem","newNumber","inputVal","newDialCode","prevDialCode","numericChars","isNaN","parseInt","trim","numericVal","start","_cap","setCountry","removeAttribute","getExtension","_getFullNumber","getNumberType","getValidationError","isValidNumber","originalCountryCode","prototype","getCountryData","injectScript","path","handleSuccess","handleFailure","script","onload","onerror","async","src","startedLoadingUtilsScript","version","iti","_init","jQuery","validator","addMethod","_element","optional","location","pathname","$","register_form","show","steps","headerTag","bodyTag","transitionEffect","labels","cancel","current","pagination","finish","previous","loading","onInit","_event","_currentIndex","css","values","find","select","textarea","each","_index","attr","Number","sessionStorage","getItem","term","hasClass","split","valueee","console","log","append","trigger","removeItem","onStepChanging","currentIndex","newIndex","removeClass","validate","settings","ignore","valid","onStepChanged","_priorIndex","onFinishing","onFinished","hidden","setItem","submit","errorPlacement","error","before","rules","required","noBlank","acceptChar","minlength","password","password_confirmation","equalTo","bio","qualification-img","Qualification","Years_of_experience","profile-img","phone","email","specialties[]","personal-card-img-s3url","type-of-card","certification-img","card-img","courses[]","messages","cantBeZero","personal-card-img","student_register","phone_el","countryName","parent","nextAll","countryFlag","studentName","register_email","token","ajax","url","origin","data","phone_country_name","phone_country_code","phone_country_flag","_token","done","response","textStatus","jqXHR","status","swal","icon","text","message","href","student-name","mobileNumber","maxlength","new-password","re-password","code-number","ready","on","eye","prev","addClass","prop","reset","noSpace","course-name","uni-name","teacher-name","dropify","default","event","select2","tags","tooltip"],"mappings":"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","file":"teacher-register.js","sourcesContent":[null,"/*\n * International Telephone Input v16.0.11\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    var intlTelInput = factory(window, document);\n    if (typeof module === \"object\" && module.exports) module.exports = intlTelInput; else window.intlTelInput = intlTelInput;\n})(function(window, document, undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2 ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1 ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Swaziland\", \"sz\", \"268\" ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        window.intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {}\n        };\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // keep track of if the window.load event has fired as impossible to check after the fact\n        window.addEventListener(\"load\", function() {\n            // UPDATE: use a public static field so we can fudge it in the tests\n            window.intlTelInputGlobals.windowLoaded = true;\n        });\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, dialCode, priority) {\n                    if (dialCode.length > this.dialCodeMaxLen) {\n                        this.dialCodeMaxLen = dialCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(dialCode)) {\n                        this.countryCodes[dialCode] = [];\n                    }\n                    // bail if we already have this country for this dialCode\n                    for (var i = 0; i < this.countryCodes[dialCode].length; i++) {\n                        if (this.countryCodes[dialCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[dialCode].length;\n                    this.countryCodes[dialCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.dialCodeMaxLen = 0;\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-owns\": \"country-listbox\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"country-listbox\",\n                            \"aria-expanded\": \"false\",\n                            role: \"listbox\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\");\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-item-\").concat(c.iso2, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    var val = this.telInput.value;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.windowLoaded) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-item-\".concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            var nextItem = this.countryList.querySelector(\"#iti-item-\".concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.countryList.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    containerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (this.countryCodes[numericChars]) {\n                                    // store the actual raw string (useful for matching later)\n                                    dialCode = number.substr(0, i + 1);\n                                }\n                                if (numericChars.length === this.dialCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        window.intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        window.intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        window.intlTelInputGlobals.defaults = defaults;\n        // version\n        window.intlTelInputGlobals.version = \"16.0.11\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","// $(function () {\r\n//   'use strict';\r\n   // this function to check the blank and prevent submit the form with blank\r\n    jQuery.validator.addMethod(\"noBlank\", function (value, _element) {\r\n      return value.trim().length !== 0;\r\n  }, \"عذراً  ! الحقل فارغ \");\r\n    \r\n//   jQuery.validator.addMethod(\"countryCode\", function (value, element) {\r\n//     return iti.getValidationError() === 0 && iti.isValidNumber() === true;\r\n// }, \"الرجاء ادخال كود الدولة بشكل صحيح\");\r\n\r\n    // this function to check if the first char is nummeric of symbol and prevent it\r\n    jQuery.validator.addMethod(\"numericOrSymbol\", function (value, _element) {\r\n      // console.log(value.charAt(0));\r\n      return [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"٠\",\r\n       \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٥   ٨\", \"٩\", \"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\", \"-\", \"_\", '+', \"=\", \"/\", \"|\", \"{\", \"}\", \";\"].indexOf(value.charAt(0)) < 0;\r\n  }, \"يجب أن تبدأ بحرف , غير مسموح أن تبدأ برقم أو رمز\");\r\n        \r\n   // this function to accept just charachter value\r\n   jQuery.validator.addMethod(\"acceptChar\", function (value, element) {\r\n    return this.optional(element) || /^[ءa-zA-Zأ-ي ]+$/i.test(value)\r\n}, \"عذراً يجب ادخال حروف فقط !\");\r\n\r\n    // this function to check if the first char is nummeric of symbol and prevent it\r\n    jQuery.validator.addMethod(\"cantBeZero\", function (value, _element) {\r\n      // console.log(value.charAt(0));\r\n      return [\"0\"].indexOf(value.charAt(0)) < 0;\r\n  }, \"لا يمكن أن يبدأ الرقم ب 0\");\r\n  var route_name = window.location.pathname;\r\n\r\nif ($(\"#register-form\")) {\r\n  var register_form = $(\"#register-form\").show();\r\n \r\n  register_form.steps({\r\n      headerTag: \"h3\",\r\n      bodyTag: \"fieldset\",\r\n      transitionEffect: \"slideLeft\",\r\n     labels: {\r\n      cancel: \"Cancel\",\r\n      current: \"current step:\",\r\n      pagination: \"Pagination\",\r\n      finish: \"اتمام التسجيل\",\r\n      next: \"التالي\",\r\n      previous: \"السابق\",\r\n      loading: \"Loading ...\"\r\n  },\r\n      onInit:  function (_event, _currentIndex) {\r\n        // console.log(currentIndex);\r\n        // if ( currentIndex == 0) {\r\n          // console.log('asmaaa');\r\n          $('.wizard > .actions > ul > li a[href=\"#previous\"]').css('display', 'none')[0];\r\n        // } else {\r\n          var input = $(Object.values(register_form)[0]).find('input');\r\n          var select = $(Object.values(register_form)[0]).find('select');\r\n          var textarea = $(Object.values(register_form)[0]).find('textarea');\r\n    \r\n          input.each(function (_index, value) {\r\n              if (input[_index].type == \"file\"){\r\n                var name = $(value).attr('name');\r\n                $(value).attr('data-default-file', $(value).next().val());\r\n  \r\n              } else if (input[_index].type == \"password\") {\r\n  \r\n              } else if (input[_index.type] == \"number\"){\r\n                var name = $(value).attr('name');\r\n                $(value).val(Number(sessionStorage.getItem(name)));\r\n              }\r\n              else {\r\n                var name = $(value).attr('name');\r\n                if (name != \"_token\"){\r\n                  $(value).val(sessionStorage.getItem(name));\r\n                }\r\n              }\r\n          });\r\n          select.each(function (_index, value) {\r\n            var name = $(value).attr('name');\r\n            if ($(value).hasClass('select2')) {\r\n              var term;\r\n              if (sessionStorage.getItem(name)){\r\n                term  = sessionStorage.getItem(name).split(\",\");\r\n                $(value).find('option').each(function() {\r\n                  var valueee = $(this).val();\r\n                    console.log(valueee)\r\n                    for (let index = 0; index < term.length; index++) {\r\n                      if (term[index] != valueee) {\r\n                        console.log(\"equal\")\r\n                        $(value).append(`<option>${term[index]}<option>`).trigger('change');\r\n                      }\r\n                    }\r\n                });\r\n                  console.log(term);\r\n              }   \r\n            } else {\r\n              $(value).val(sessionStorage.getItem(name));\r\n  \r\n            }\r\n          })\r\n          textarea.each(function (_index, value) {\r\n            var name = $(value).attr('name');\r\n            $(value).val(sessionStorage.getItem(name));\r\n          })\r\n  \r\n  \r\n          // // // end sessions\r\n          setTimeout(function(){ \r\n            input.each(function (_index, value) {\r\n              if (input[_index].type == \"file\"){\r\n                $(value).attr('data-default-file', '');\r\n              } else {\r\n                var name = $(value).attr('name');\r\n                if (name != \"_token\") {\r\n                  sessionStorage.removeItem(name);\r\n                }\r\n              }\r\n            });\r\n            select.each(function (_index, value) {\r\n              var name = $(value).attr('name');\r\n              sessionStorage.removeItem(name);\r\n            })\r\n            textarea.each(function (_index, value) {\r\n              var name = $(value).attr('name');\r\n              sessionStorage.removeItem(name);\r\n            })\r\n           }, 3000);\r\n        \r\n      },\r\n      onStepChanging: function (_event, currentIndex, newIndex)\r\n      {\r\n  \r\n        if (currentIndex == 1)\r\n        {\r\n          // $('.wizard > .actions > ul > li a[href=\"#previous\"]').css('display', 'block')[0];\r\n  \r\n        }\r\n          // Allways allow previous action even if the current form is not valid!\r\n          if (currentIndex > newIndex)\r\n          {\r\n              return true;\r\n          }\r\n     \r\n          // Needed in some cases if the user went back (clean up)\r\n          if (currentIndex < newIndex)\r\n          {\r\n              // To remove error styles\r\n              register_form.find(\".body:eq(\" + newIndex + \") label.error\").remove();\r\n              register_form.find(\".body:eq(\" + newIndex + \") .error\").removeClass(\"error\");\r\n          }\r\n          register_form.validate().settings.ignore = \":disabled,:hidden\";\r\n          return register_form.valid();\r\n      },\r\n      onStepChanged: function (_event, _currentIndex, _priorIndex)\r\n      {\r\n        // var today = new Date();\r\n        // var expiry = new Date(today.getTime() + 24 * 3600 * 1000);\r\n  \r\n        // function setCookie(name, value) {\r\n        //   document.cookie=name + \"=\" + escape(value) + \"; path=/; expires=\" + expiry.toGMTString();\r\n        // }\r\n  \r\n      \r\n        $('.wizard > .actions > ul > li a[href=\"#previous\"]').css('display', 'block')[0];\r\n      },\r\n      onFinishing: function (_event, _currentIndex)\r\n      {\r\n   \r\n        register_form.validate().settings.ignore = \":disabled\";\r\n          return register_form.valid();\r\n          \r\n      },\r\n      onFinished: function (_event, _currentIndex)\r\n      {\r\n        var input = $(Object.values(register_form)[0]).find('input');\r\n        var select = $(Object.values(register_form)[0]).find('select');\r\n        var textarea = $(Object.values(register_form)[0]).find('textarea');\r\n        // console.log(input)\r\n        input.each(function (_index, value) {\r\n          \r\n          if (input[_index].type == \"file\"){\r\n            var name = $(value).attr('name');\r\n            var hidden = $(value).next().val();\r\n            var val = $(value).val();\r\n            $(value).attr('data-default-file', hidden );\r\n            sessionStorage.setItem(name, hidden);\r\n          } else if (input[_index].type == \"password\") {\r\n          } else {\r\n            if (name != \"_token\") {\r\n                var name = $(value).attr('name');\r\n                var val = $(value).val();\r\n                sessionStorage.setItem(name, val)\r\n            }\r\n          }\r\n        })\r\n        select.each(function (_index, value) {\r\n          var name = $(value).attr('name');\r\n          var val = $(value).val();\r\n          sessionStorage.setItem(name, val)\r\n        })\r\n        textarea.each(function (_index, value) {\r\n          var name = $(value).attr('name');\r\n          var val = $(value).val();\r\n          sessionStorage.setItem(name, val)\r\n        })\r\n        register_form.submit();  \r\n      }\r\n  }).validate({\r\n      errorPlacement: function errorPlacement(error, element) {\r\n        element.before(error);\r\n      },\r\n      rules: {\r\n        name: {\r\n            required: true,\r\n            noBlank: true,\r\n            // numericOrSymbol: true,\r\n            acceptChar: true,\r\n            minlength: 4,\r\n        },\r\n        password: {\r\n          required: true,\r\n          minlength: 6,\r\n        },\r\n        password_confirmation: {\r\n          required: true,\r\n          equalTo: '#register-password'\r\n      },\r\n      bio: {\r\n        required: true,\r\n      },\r\n      'qualification-img': {\r\n            required: true,\r\n            noBlank: true\r\n      },\r\n      Qualification: {\r\n        required: true,\r\n      },\r\n      Years_of_experience: {\r\n        required: true,\r\n        noBlank: true\r\n      },\r\n      'profile-img': {\r\n        required: true,  \r\n      },\r\n      phone: {\r\n        required: true,  \r\n        // countryCode: true,\r\n        noBlank: true,\r\n      },\r\n      email: {\r\n        required: true,\r\n        email: true\r\n      },\r\n      'specialties[]': {\r\n        required: true,\r\n      },\r\n      'personal-card-img-s3url': {\r\n        required: true, \r\n      },\r\n      'type-of-card': {\r\n        required: true, \r\n      },\r\n      'certification-img': {\r\n        required: true,   \r\n      },\r\n      'card-img': {\r\n        required: true,    \r\n      },\r\n      'courses[]': {\r\n        required: true,\r\n      }\r\n    },\r\n    messages: {\r\n        name: {\r\n            required: \"هذا الحقل مطلوب\",\r\n            minlength: \"لا يمكن أن يكون الاسم أقل من 4 حروف\"\r\n        },\r\n        password: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          minlength: \"يجب أن لا تقل كلمة المرور عن 6 حروف\"\r\n        },\r\n        password_confirmation: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          equalTo: \"الرجاء التأكد من تطابق كلمة المرور\"\r\n        },\r\n        bio: {\r\n          required: \"هذا الحقل مطلوب\",\r\n        },\r\n        Qualification: {\r\n          required: 'هذا الحقل مطلوب '\r\n        },\r\n        'qualification-img': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      Years_of_experience: {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'profile-img': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      phone: {\r\n        required: \"هذا الحقل مطلوب\",\r\n        cantBeZero: true,\r\n      },\r\n      email: {\r\n        required: \"هذا الحقل مطلوب\",\r\n        email: \"الرجاء ادخال بريد الكتروني صحيح\"\r\n      },\r\n      'specialties[]': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'personal-card-img': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'type-of-card': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'certification-img': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'card-img': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      },\r\n      'courses[]': {\r\n        required: \"هذا الحقل مطلوب\",\r\n      }\r\n    }\r\n  });\r\n  \r\n}\r\n// for student register form\r\nif ($('#student-register-form')) {\r\n    var registeredPhone;\r\n    var student_register = $('#student-register-form').show();\r\n\r\n    student_register.steps({\r\n        headerTag: \"h3\",\r\n        bodyTag: \"fieldset\",\r\n        transitionEffect: \"slideLeft\",\r\n      labels: {\r\n        cancel: \"Cancel\",\r\n        current: \"current step:\",\r\n        pagination: \"Pagination\",\r\n        finish: \"اشتراك\",\r\n        next: \"الخطوة التالية\",\r\n        previous: \"الخطوة السابقة\",\r\n        loading: \"Loading ...\"\r\n    },\r\n        onInit:  function (_event, _currentIndex) {\r\n          // console.log(_currentIndex)\r\n          $('.wizard > .actions > ul > li a[href=\"#previous\"]').css('display', 'none')[0];\r\n        },\r\n        onStepChanging: function (_event, currentIndex, newIndex)\r\n        {\r\n          $('.wizard > .actions > ul > li a[href=\"#previous\"]').css('display', 'block')[0];\r\n            // Allways allow previous action even if the current form is not valid!\r\n            if (currentIndex > newIndex)\r\n            {\r\n                return true;\r\n            }\r\n            // Needed in some cases if the user went back (clean up)\r\n            if (currentIndex < newIndex)\r\n            {\r\n                // To remove error styles\r\n                student_register.find(\".body:eq(\" + newIndex + \") label.error\").remove();\r\n                student_register.find(\".body:eq(\" + newIndex + \") .error\").removeClass(\"error\");\r\n            }\r\n            student_register.validate().settings.ignore = \":disabled,:hidden\";\r\n            return student_register.valid();\r\n        },\r\n        onStepChanged: function (_event, _currentIndex, _priorIndex)\r\n        {\r\n          var phone_el = $(\"#mobileNumber\");\r\n          // var flag = $('.phone_country_flag').text();\r\n          // console.log(flag);\r\n\r\n          var countryName = $(phone_el).parent().nextAll('.country-name').val(),\r\n           countryFlag = $(phone_el).parent().nextAll('.country-flag').val(),\r\n           countryCode = $(phone_el).parent().nextAll('.country-code').val();\r\n\r\n          console.log(countryName + countryCode + countryFlag);\r\n          // console.log(_currentIndex);\r\n          var studentName = $(\"#student-name\").val(), \r\n          phone = $(\"#mobileNumber\").val(),\r\n          password = $(\"#new-password\").val(),\r\n          register_email = $(\"#register-email\").val();\r\n          \r\n        // var token = $('meta').attr(\"content\");\r\n        var token = $('#token').val();\r\n        // console.log(token);\r\n        //   if (_currentIndex == 1) {   \r\n        \r\n        //   }\r\n        },\r\n        onFinishing: function (_event, _currentIndex)\r\n        {\r\n          student_register.validate().settings.ignore = \":disabled\";\r\n            return student_register.valid();\r\n        },\r\n        onFinished: function (_event, _currentIndex)\r\n        {\r\n          var phone_el = $(\"#mobileNumber\");\r\n          // var flag = $('.phone_country_flag').text();\r\n          // console.log(flag);\r\n\r\n          var countryName = $(phone_el).parent().nextAll('.country-name').val(),\r\n           countryFlag = $(phone_el).parent().nextAll('.country-flag').val(),\r\n           countryCode = $(phone_el).parent().nextAll('.country-code').val();\r\n\r\n          // console.log(countryName + countryCode + countryFlag);\r\n          // console.log(_currentIndex);\r\n          var studentName = $(\"#student-name\").val(), \r\n          phone = $(\"#mobileNumber\").val(),\r\n          password = $(\"#new-password\").val(),\r\n          register_email = $(\"#register-email\").val();\r\n          \r\n        // var token = $('meta').attr(\"content\");\r\n        var token = $('#token').val();\r\n        // console.log(token)\r\n        // console.log(phone)\r\n        // console.log(password)\r\n        // console.log(studentName)\r\n          var request = $.ajax({\r\n            url: window.location.origin + '/student-register',\r\n            type: \"post\",\r\n            data: {\r\n                'name': studentName,\r\n                'phone': phone,\r\n                'phone_country_name': countryName,\r\n                'phone_country_code': countryCode,\r\n                'phone_country_flag': countryFlag,\r\n                'email': register_email,\r\n                'password': password,\r\n                \"_token\" : token,\r\n            }\r\n        });\r\n        // Callback handler that will be called on success\r\n        request.done(function (response, textStatus, jqXHR) {\r\n            console.log(\"Hooray, it worked!\" + textStatus);\r\n            if (textStatus == 'success') {\r\n                // console.log('success');\r\n                // console.log(response);\r\n                if (response.status == true) {\r\n                  registeredPhone = response.phone;\r\n                  swal({\r\n                    icon: \"success\",\r\n                    text: response.message\r\n                  })\r\n                  window.location.href = '/student-subscriptions';\r\n                } else {\r\n                  swal({\r\n                    icon: \"error\",\r\n                    text: response.message\r\n                  })\r\n                }\r\n            }\r\n        });\r\n            // console.log(registeredPhone);\r\n          //   var code = $(\"#code-number\").val();\r\n          //   // console.log(code)\r\n          //   var token = $('#token').val();\r\n          //   // console.log(token)\r\n          //   var request = $.ajax({\r\n          //     url: window.location.origin + '/api/v2/verify-code',\r\n          //     type: \"post\",\r\n          //     data: {\r\n          //       'verified_code': code,\r\n          //       'phone': registeredPhone,\r\n          //       \"_token\" : token,\r\n          //     }\r\n          // });\r\n          // Callback handler that will be called on success\r\n          // request.done(function (response, textStatus, jqXHR) {\r\n          //     console.log(\"Hooray, it worked!\" + textStatus);\r\n          //     if (textStatus == 'success') {\r\n          //         // console.log('success');\r\n          //         // console.log(response);\r\n          //         if (response.status == true){\r\n          //           swal({\r\n          //             icon: \"success\",\r\n          //             text: \"تمت عملية التحقق بنجاج\"\r\n          //           }) \r\n          //           window.location.href = '/student-subscriptions';\r\n          //         } else {                 \r\n          //           swal({\r\n          //             icon: \"error\",\r\n          //             text: response.ar_message\r\n          //           })\r\n          //         }\r\n          //         // \r\n          //     }\r\n          // });\r\n    \r\n        }\r\n    }).validate({\r\n        errorPlacement: function errorPlacement(error, element) {\r\n          element.before(error);\r\n        },\r\n        rules: {\r\n          'student-name': {\r\n              required: true,\r\n              noBlank: true,\r\n              acceptChar: true,\r\n          },\r\n          email: {\r\n            required: true,\r\n            email: true,\r\n          },\r\n          mobileNumber: {\r\n            required: true,\r\n            noBlank: true,\r\n            minlength: 8,\r\n            maxlength: 13,\r\n          },\r\n          'new-password': {\r\n            required: true,\r\n          },\r\n          're-password': {\r\n            required: true,\r\n            equalTo: '#new-password'\r\n        },\r\n        'code-number': {\r\n          required: true,\r\n          minlength: 6,\r\n          maxlength: 6,\r\n        }\r\n      },\r\n      messages: {\r\n        'student-name': {\r\n          required: \"هذا الحقل مطلوب\",\r\n        },\r\n        email: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          email: \"الرجاء ادخال بريد الكتروني صحيح\"\r\n        },\r\n        mobileNumber: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          minlength: 'عذراً ! لا يمكن أن يكون الرقم أقل من 8 خانات',\r\n          maxlength: 'عذراً ! لا يمكن أن يكون الرقم أكثر من 9 خانات',\r\n        },\r\n        'new-password': {\r\n          required: \"هذا الحقل مطلوب\",\r\n        },\r\n        're-password': {\r\n          required: \"هذا الحقل مطلوب\",\r\n          equalTo: 'الرجاء التأكد من تطابق كلمة المرور'\r\n        },\r\n        'code-number': {\r\n          required: \"هذا الحقل مطلوب\",\r\n          minlength: 'عذراً ! لا يمكن أن يكون الكود أقل من 6 خانات',\r\n          maxlength: 'عذراً ! لا يمكن أن يكون الكود أكثر من 6 خانات',\r\n        }\r\n      }\r\n\r\n    });\r\n}\r\n// $(\"#resendCode\").on('click', function(){\r\n//   // console.log(\"asmaaaa ali albaik\")\r\n//       var resendRequest = $.ajax({\r\n//         url: window.location.origin + '/api/v2/resend-verify-code',\r\n//         type: \"post\",\r\n//         data: {\r\n//           'phone': registeredPhone,\r\n//           \"_token\" : token,\r\n//         }\r\n//     });\r\n//     // Callback handler that will be called on success\r\n//     resendRequest.done(function (response, textStatus, jqXHR) {\r\n//         console.log(\"Hooray, it worked!\" + textStatus);\r\n//         if (textStatus == 'success') {\r\n//             // console.log('success');\r\n//             // console.log(response);\r\n//             if (response.status == true){\r\n//               swal({\r\n//                 icon: \"success\",\r\n//                 text: \"تمت إعادة ارسال كود تحقق جديد\"\r\n//               })\r\n//             } \r\n//         }\r\n//     });\r\n// });\r\n// });","$(document).ready(function () {\r\n\r\n    $(\".hide-show-pass\").on(\"click\", function() {\r\n        var eye = $(this);\r\n        // eye.css('color','#254A5D');\r\n\r\n        var password = eye.prev().prev('input')[0];\r\n        if (password == undefined) {\r\n            password = eye.prev().prev().prev('input')[0];\r\n            // console.log('undefined asm')\r\n        }\r\n        // console.log(password);\r\n        // console.log(\"asmaa\")\r\n        if (eye.hasClass(\"fa-eye\")) {\r\n        // eye.css('color','#C7D1D5');\r\n        eye.removeClass(\"fa-eye\").addClass(\" fa-eye-slash\");\r\n        $(password).prop(\"type\", \"text\");\r\n        } else {\r\n        // eye.css('color','#254A5D');\r\n        eye.removeClass(\"fa-eye-slash\").addClass(\" fa-eye\");\r\n        $(password).prop(\"type\", \"password\");\r\n        }\r\n    });\r\n\r\n    $('.empty-field').on('click', function(){\r\n        var form = $(this).parent().parent('form')[0];\r\n        // console.log(form);\r\n        form.reset();\r\n        // var input = $(this).parent().parent().find('input');\r\n        // console.log(input);\r\n        // $(input).each(function () {\r\n        //     var type = $(this).attr('type');\r\n        //     console.log(\"input type \" +type);\r\n        //     if ( (type !== 'hidden') || (type !== 'button') || (type !== 'submit')){\r\n        //         $(input).val('');\r\n        //     } \r\n        //   });\r\n    })\r\n});"," $(document).ready(function () {\r\n  $(\"form input\").each(function( index ) {\r\n    // console.log('hello');\r\n    // console.log($(this));\r\n  var label = $(this).next(\".form__label\");\r\n  // console.log(label);\r\n\r\n  if ($(this).val() != \"\") {\r\n      label.addClass(\"has-data\");\r\n    } else {\r\n      label.removeClass(\"has-data\");\r\n    }\r\n});\r\n  $(\"input\").on(\"focusout keyup\", function() {\r\n    // console.log(this);\r\n      var label = $(this).next('.form__label');\r\n      // console.log(label);\r\n      if ($(this).val() != \"\") {\r\n        label.addClass(\"has-data\");\r\n      } else {\r\n        label.removeClass(\"has-data\");\r\n      }\r\n      if ($(this).hasClass('error')) {\r\n        // console.log(\"erorr\")\r\n        var label = $(this).next().next('.form__label');\r\n        label.addClass(\"has-data\");\r\n      }\r\n  });\r\n\r\n });\r\n","/*global $, JQuery , alert*/\r\n$(function () {\r\n    'use strict';\r\n    // this function to prevent any added spaces\r\n    jQuery.validator.addMethod(\"noSpace\", function (value, element) {\r\n        return value.indexOf(\" \") < 0 && value != \"\";\r\n    }, \"عذراً ! لا يمكنك ترك مسافات \");\r\n\r\n    // this function to check the blank and prevent submit the form with blank\r\n    jQuery.validator.addMethod(\"noBlank\", function (value, element) {\r\n        return value.trim().length !== 0;\r\n    }, \"عذراً  ! الحقل فارغ \");\r\n\r\n    $(\"#login\").validate({\r\n      rules: {\r\n        email: {\r\n          required: true,\r\n          email: true\r\n        },\r\n        password: {\r\n          required: true,\r\n          noBlank: true,\r\n          noSpace: true,\r\n        }\r\n      },\r\n      messages: {\r\n        email: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          email: \"الرجاء ادخال بريد الكتروني صحيح\"\r\n        },\r\n        password: {\r\n          required: \"هذا الحقل مطلوب\"\r\n        }\r\n      }\r\n    });\r\n\r\n    $(\"#course-request-form\").validate({\r\n      rules: {\r\n        'course-name': {\r\n          required: true,\r\n          noBlank: true\r\n        },\r\n        'uni-name': {\r\n          required: true,\r\n          noBlank: true\r\n        },\r\n        'teacher-name': {\r\n          required: true,\r\n          noBlank: true\r\n        },\r\n        email: {\r\n            required: true,\r\n            email: true\r\n          },\r\n      },\r\n      messages: {\r\n        'course-name': {\r\n          required: \"هذا الحقل مطلوب\",\r\n        },\r\n        'uni-name': {\r\n          required: \"هذا الحقل مطلوب\"\r\n        },\r\n        'teacher-name': {\r\n          required: \"هذا الحقل مطلوب\"\r\n        },\r\n        email: {\r\n          required: \"هذا الحقل مطلوب\",\r\n          email: \"الرجاء ادخال بريد الكتروني صحيح\"\r\n        },\r\n      }\r\n    });\r\n});","var drEvent = $('.dropify').dropify({\r\n    messages: {\r\n        'default': 'قم بالضغط على المستطيل أو أفلت الملف هنا',\r\n        'replace': 'قم بالضغط على المستطيل أو أفلت الملف هنا',\r\n        'remove':  'حذف',\r\n        // 'error':   'حدث خطأ !'\r\n    }\r\n\r\n});\r\ndrEvent.on('dropify.afterClear', function(event, element){\r\n    // alert('File deleted');\r\n});\r\n","// options = {\r\n//     tags: true\r\n// }\r\nvar select2 = $('.select2').select2({\r\n    // theme: 'bootstrap4',\r\n    tags: true\r\n});\r\n// console.log(select2)\r\n$('.select2').on('change', function(){\r\n    // console.log($(this));\r\n    \r\n    // console.log($(this).val());\r\n    // if ($(this).val() == 3) {\r\n    //     options = {\r\n    //         tags: true\r\n    //     }\r\n    // }\r\n});\r\n$(document).ready(function(){\r\n    $('[data-toggle=\"tooltip\"]').tooltip();   \r\n  });\r\n// $(document).ready(function(){\r\n\r\n//   $('[data-toggle=\"popover\"]').popover();   \r\n// });"]}